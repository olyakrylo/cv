{"version":3,"sources":["info.js","components/LocalesMenu/index.js","components/LocalesMenu/LocalesMenu.js","components/About/index.js","components/About/About.js","components/Dialog/index.js","components/Dialog/Dialog.js","components/Organization/index.js","components/Organization/Organization.js","components/Projects/Item/index.js","components/Projects/Item/Item.js","components/Projects/index.js","components/Projects/Projects.js","components/Skills/Item/index.js","components/Skills/Item/Item.js","components/Skills/index.js","components/Skills/Skills.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["languages","langIcons","en","name","icon","ru","about","age","today","Date","birthDate","getFullYear","monthDiff","getMonth","getDate","getAge","email","phone","cv","contactIcons","modificator","href","biocadInfoList","Typography","gpnInfoList","projects","intlName","link","techs","gitHubLink","infoList","Link","target","linkTitle","skills","text","softSkills","LocalesMenu","useState","langMenu","setLangMenu","changeLanguage","lang","a","i18n","localStorage","setItem","useTranslation","Button","aria-owns","aria-haspopup","onClick","event","currentTarget","className","src","process","language","alt","Menu","id","anchorEl","keepMounted","open","Boolean","onClose","map","MenuItem","key","About","t","Divider","Object","entries","reduce","prev","field","value","content","item","i","Tooltip","title","rel","AppDialog","opened","Dialog","DialogTitle","DialogContent","List","data","ListItem","DialogActions","Organization","subtitle","year","logo","dialogOpened","setDialogOpened","variant","Item","type","tech","Projects","filter","_","SkillsItem","info","showTitle","toggleTitle","classList","add","setTimeout","remove","Skills","props","state","showDivider","items","React","createRef","document","addEventListener","show","window","pageYOffset","innerHeight","current","offsetTop","interval","setInterval","length","setState","clearInterval","removeEventListener","ref","this","aria-hidden","Component","App","theme","createTheme","palette","primary","main","typography","fontSize","fontWeightLight","fontWeightMedium","fontWeightRegular","fontWeightBold","ThemeProvider","location","hostname","match","resources","translation","storageLang","getItem","navLang","navigator","split","getLangValue","keys","includes","undefined","use","initReactI18next","init","lng","keySeparator","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6XAGaA,EAAY,CAAC,KAAM,MAEnBC,EAAY,CACvBC,GAAI,CACFC,KAAM,UACNC,KAAM,MAERC,GAAI,CACFF,KAAM,6CACNC,KAAM,WAeH,IAAME,EAAQ,CACnBC,IAZF,WACE,IAAMC,EAAQ,IAAIC,KACZC,EAAY,IAAID,KAAK,KAAM,EAAG,GAChCF,EAAMC,EAAMG,cAAgBD,EAAUC,cACpCC,EAAYJ,EAAMK,WAAaH,EAAUG,WAI/C,OAHID,EAAY,GAAoB,IAAdA,GAAmBJ,EAAMM,UAAYJ,EAAUI,YACnEP,IAEKA,EAIFQ,GAELC,MAAO,wBACPC,MAAO,oBACPC,GAAI,iFAGOC,EAAe,CAC1B,CACEC,YAAa,KACbhB,KAAM,KACNiB,KAAM,4BAER,CACED,YAAa,KACbhB,KAAM,KACNiB,KAAM,0BAER,CACED,YAAa,MACbhB,KAAM,SACNiB,KAAM,gCAER,CACED,YAAa,WACbhB,KAAM,WACNiB,KAAM,wDAIGC,EAAiB,CAC5BjB,GAAI,CACF,kBAACkB,EAAA,EAAD,uaAC6E,sCAD7E,oHAEqB,qCAFrB,iFAEmE,oCAFnE,i3BAKE,6BACA,wDANF,yDAQA,kBAACA,EAAA,EAAD,0YACyE,mCADzE,UACuF,IACrF,yCAFF,IAGE,6BACA,wDAJF,2BAMA,kBAACA,EAAA,EAAD,waAC+E,IAC7E,8CAFF,WAE2B,uCAF3B,IAGE,6BACA,wDAJF,mBAMA,kBAACA,EAAA,EAAD,uHACuB,oCADvB,+WAGE,6BACA,wDAJF,gCAOFrB,GAAI,CACF,kBAACqB,EAAA,EAAD,qEAC+D,sCAD/D,wBAEM,qCAFN,mCAEmD,oCAFnD,WAEuE,wCAFvE,mKAKE,6BACA,qCANF,yDAQA,kBAACA,EAAA,EAAD,qEAC+D,mCAD/D,QAC+E,yCAD/E,IAEG,6BACD,qCAHF,2BAKA,kBAACA,EAAA,EAAD,iFAC4E,IAC1E,8CAFF,QAE6B,uCAF7B,IAE6C,6BAC3C,qCAHF,mBAKA,kBAACA,EAAA,EAAD,iCAC2B,oCAD3B,+DAGE,6BACA,qCAJF,kCASSC,EAAc,CACzBnB,GAAI,CACF,kBAACkB,EAAA,EAAD,kUAC6D,+EAD7D,qtBAIE,6BACA,mDALF,+BAOA,kBAACA,EAAA,EAAD,2JAC6B,mHAD7B,wQAEM,+EAFN,MAKFrB,GAAI,CACF,kBAACqB,EAAA,EAAD,4DACsD,sCADtD,QACyE,sCADzE,UAC+F,IAC7F,qCAFF,sHAIE,6BACA,qCALF,+BAOA,kBAACA,EAAA,EAAD,iCAC2B,0CAD3B,qDACgG,IAC9F,oCAFF,YAOSE,EAAW,CACtB,CACEC,SAAU,KAEVC,KAAM,yCACNC,MAAO,CAAC,UAAW,aAAc,QAAS,MAAO,UAAW,SAC5DC,WAAY,+CACZC,SAAU,CACRzB,GAAI,CACF,kBAACkB,EAAA,EAAD,0rBAIA,kBAACA,EAAA,EAAD,wXACuE,IACrE,kBAACQ,EAAA,EAAD,CAAMV,KAAK,0BAA0BW,OAAO,UAA5C,YAFF,sGAKsB,IACpB,kBAACD,EAAA,EAAD,CAAMV,KAAK,oBAAoBW,OAAO,UAAtC,SAEQ,IARV,2IAWA,kBAACT,EAAA,EAAD,2nBAKFrB,GAAI,CACF,kBAACqB,EAAA,EAAD,0HAIA,kBAACA,EAAA,EAAD,KACE,kBAACQ,EAAA,EAAD,CAAMV,KAAK,0BAA0BW,OAAO,UAA5C,YAEQ,IAHV,8FAMA,kBAACT,EAAA,EAAD,gGAMN,CACEG,SAAU,MACVO,UAAW,QACXN,KAAM,mDACNC,MAAO,CAAC,QAAS,aAAc,UAC/BC,WAAY,iDACZC,SAAU,CACRzB,GAAI,CACF,kBAACkB,EAAA,EAAD,wIAC0B,IACxB,kBAACQ,EAAA,EAAD,CACEC,OAAO,SACPX,KAAK,8FAFP,2DAFF,yQAUA,kBAACE,EAAA,EAAD,kYAGA,kBAACA,EAAA,EAAD,2iBAKFrB,GAAI,CACF,kBAACqB,EAAA,EAAD,6BACwB,IACtB,kBAACQ,EAAA,EAAD,CACEC,OAAO,SACPX,KAAK,8FAFP,wBAKQ,IAPV,6DAUA,kBAACE,EAAA,EAAD,mFAGA,kBAACA,EAAA,EAAD,iFAYN,CACEG,SAAU,MACVE,MAAO,CAAC,eAAgB,YACxBC,WAAY,2EACZC,SAAU,CACRzB,GAAI,CACF,kBAACkB,EAAA,EAAD,o9BAIA,kBAACA,EAAA,EAAD,m1CAKA,kBAACA,EAAA,EAAD,igCAMFrB,GAAI,CACF,kBAACqB,EAAA,EAAD,uJAIA,kBAACA,EAAA,EAAD,0NAKA,kBAACA,EAAA,EAAD,uMAUKW,EAAS,CACpB,CACE9B,KAAM,SACN+B,KAAM,cAER,CACE/B,KAAM,SACN+B,KAAM,cAER,CACE/B,KAAM,YACN+B,KAAM,wBAER,CACE/B,KAAM,cACN+B,KAAM,WAER,CACE/B,KAAM,WACN+B,KAAM,QAER,CACE/B,KAAM,cACN+B,KAAM,WAER,CACE/B,KAAM,cACN+B,KAAM,UAER,CACE/B,KAAM,cACN+B,KAAM,WAER,CACE/B,KAAM,YACN+B,KAAM,WAUR,CACE/B,KAAM,WACN+B,KAAM,eAER,CACE/B,KAAM,UACN+B,KAAM,OAER,CACE/B,KAAM,aACN+B,KAAM,UAER,CACE/B,KAAM,aACN+B,KAAM,UAER,CACE/B,KAAM,WACN+B,KAAM,YAER,CACE/B,KAAM,YACN+B,KAAM,SAER,CACE/B,KAAM,aACN+B,KAAM,WAIGC,EAAa,CACxB,CACEhC,KAAM,oBACN+B,KAAM,wBAER,CACE/B,KAAM,oBACN+B,KAAM,mBAER,CACE/B,KAAM,mBACN+B,KAAM,0BAER,CACE/B,KAAM,cACN+B,KAAM,+BCnXKE,MCIA,WACb,MAA8BC,mBAAS,MAAvC,mBAAKC,EAAL,KAAeC,EAAf,KAUMC,EAAc,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sEACfC,EAAKH,eAAeC,GADL,OAErBG,aAAaC,QAAQ,OAAQJ,GAFR,2CAAH,sDAKZE,EAASG,cAATH,KAER,OACE,6BACE,kBAACI,EAAA,EAAD,CACEC,YAAU,cACVC,gBAAc,OACdC,QApBW,SAAAC,GACfZ,EAAYY,EAAMC,gBAoBdC,UAAU,uBAEV,yBACEA,UAAU,gBACVC,IAAG,UAAKC,IAAL,kBAAqCvD,EAAU2C,EAAKa,UAAUrD,KAA9D,QACHsD,IAAI,MAGR,kBAACC,EAAA,EAAD,CACEC,GAAG,cACHC,SAAUtB,EACVuB,aAAW,EACXC,KAAMC,QAAQzB,GACd0B,QA9BY,WAChBzB,EAAY,QA+BPxC,EAAUkE,KAAI,SAAAxB,GAAI,OACjB,kBAACyB,EAAA,EAAD,CAAUC,IAAK1B,EAAMS,QAAS,kBAAMV,EAAeC,KACjD,yBACEY,UAAU,gBACVC,IAAG,UAAKC,IAAL,kBAAqCvD,EAAUyC,GAAMtC,KAArD,QACHsD,IAAI,KAEN,0BAAMJ,UAAU,mBAAmBrD,EAAUyC,GAAMvC,a,kCClDhDkE,MCIA,WACb,IAAQC,EAAMvB,cAANuB,EAyCR,OACE,yBAAKhB,UAAU,SACb,yBAAKC,IAAG,UAAKC,IAAL,eAA0CF,UAAU,aAAaI,IAAI,KAC7E,yBAAKJ,UAAU,oBACb,yBAAKA,UAAU,cACb,0BAAMA,UAAU,mBAAmBgB,EAAE,UAEvC,yBAAKhB,UAAU,kBAAkBgB,EAAE,aACnC,kBAACC,EAAA,EAAD,CAASjB,UAAU,kBACnB,yBAAKA,UAAU,iBA/CZkB,OAAOC,QAAQnE,GAAOoE,QAAO,SAACC,EAAD,GAA2B,IAAD,mBAAlBC,EAAkB,KAAXC,EAAW,KACxDC,EAAU,yBAAKV,IAAKS,GAAQP,EAAEO,IAQlC,MAPc,OAAVD,IACFE,EACE,kBAAC/C,EAAA,EAAD,CAAMqC,IAAKS,EAAOxD,KAAMwD,EAAO7C,OAAO,UAAtC,mBAKE,GAAN,mBACK2C,GADL,CAEE,yBAAKrB,UAAU,qBAAqBc,IAAKQ,GACtCN,EAAE,SAAD,OAAUM,KAEdE,MAED,KAgCC,yBAAKxB,UAAU,eA5BZnC,EAAa+C,KAAI,SAACa,EAAMC,GAAP,OACtB,kBAACC,EAAA,EAAD,CAASC,MAAOH,EAAK1D,KAAM+C,IAAKY,GAC9B,uBACE3D,KAAM0D,EAAK1D,KACXiC,UAAS,gCAA2ByB,EAAK3D,aACzCY,OAAO,SACPmD,IAAI,uBAEJ,yBACE5B,IAAG,UAAKC,IAAL,kBAAqCuB,EAAK3E,KAA1C,QACHsD,IAAI,GACJJ,UAAU,4B,sECvCP8B,MCSA,YAAwE,IAAnDC,EAAkD,EAAlDA,OAAQH,EAA0C,EAA1CA,MAAgBjB,GAA0B,EAAnCa,QAAmC,EAA1Bb,SAA0B,IAAjBnC,gBAAiB,MAAN,GAAM,EACpF,OACE,kBAACwD,EAAA,EAAD,CAAQvB,KAAMsB,EAAQpB,QAASA,GAC7B,kBAACsB,EAAA,EAAD,CAAajC,UAAU,SAAS4B,GAChC,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMnC,UAAU,QACbxB,EAASoC,KAAI,SAACwB,EAAMV,GAAP,OACZ,kBAACW,EAAA,EAAD,CAAUvB,IAAKY,EAAG1B,UAAU,cACzBoC,QAKT,kBAACE,EAAA,EAAD,QCtBSC,MCIA,YAAkE,IAA1CX,EAAyC,EAAzCA,MAAOY,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMlE,EAAY,EAAZA,SAClE,EAAwCQ,oBAAS,GAAjD,mBAAO2D,EAAP,KAAqBC,EAArB,KAUQ5B,EAAMvB,cAANuB,EACR,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,cAAcgB,EAAEY,IAC/B,yBAAK5B,UAAU,iBAAiBgB,EAAEwB,IAEjChE,GACC,kBAACkB,EAAA,EAAD,CAAQM,UAAU,YAAY6C,QAAS,WAAYhD,QAhB3D,WACE+C,GAAgB,KAgBP5B,EAAE,cAIP,yBAAKhB,UAAU,aAAagB,EAAEyB,KAEhC,yBAAKzC,UAAU,WAAWC,IAAG,UAAKC,IAAL,gBAAmCwC,GAAQtC,IAAI,KAE3E5B,GACC,kBAAC,EAAD,CACEuD,OAAQY,EACRnE,SAAUA,EACVoD,MAAOZ,EAAE,uBACTL,QA1BR,WACEiC,GAAgB,Q,cCZLE,MCIA,YAA+B,IAAD,EAAdrB,EAAc,EAAdA,KAAMsB,EAAQ,EAARA,KACnC,EAAwC/D,oBAAS,GAAjD,mBAAO2D,EAAP,KAAqBC,EAArB,KAUA,EAAoBnD,cAAZuB,EAAR,EAAQA,EAAG1B,EAAX,EAAWA,KACX,OACE,yBAAKU,UAAS,oBAAe+C,IAC3B,yBAAK/C,UAAU,cACb,yBAAKA,UAAU,eACZgB,EAAE,GAAD,OAAIS,EAAKrD,SAAT,WACDqD,EAAKlD,YACJ,kBAACE,EAAA,EAAD,CAAMC,OAAO,SAASX,KAAM0D,EAAKlD,WAAYyB,UAAU,iBACrD,yBACEI,IAAI,SACJH,IAAG,UAAKC,IAAL,qBACHF,UAAU,qBAKlB,yBAAKA,UAAU,kBAAkBgB,EAAE,GAAD,OAAIS,EAAKrD,SAAT,eACjCqD,EAAKpD,MACJ,uBAAG2B,UAAU,aAAajC,KAAM0D,EAAKpD,KAAMK,OAAO,SAASmD,IAAI,uBAC5Db,EAAES,EAAK9C,UAAY,YAAc,QACjC8C,EAAK9C,WAAa,2CAAS8C,EAAK9C,YAGrC,yBAAKqB,UAAU,gBACb,4BAAQA,UAAU,aAAaH,QAhCvC,WACE+C,GAAgB,KAgCP5B,EAAE,cAEL,yBAAKhB,UAAU,eACZyB,EAAKnD,MAAMsC,KAAI,SAACoC,EAAMtB,GAAP,OACd,yBAAK1B,UAAU,aAAac,IAAKY,GAC9BsB,SAOX,kBAAC,EAAD,CACEjB,OAAQY,EACRf,MAAOZ,EAAE,uBACTxC,SAAQ,UAAEiD,EAAKjD,SAASc,EAAKa,iBAArB,QAAkC,GAC1CQ,QA7CN,WACEiC,GAAgB,QCZLK,MCGA,WACb,OACE,yBAAKjD,UAAU,YACb,yBAAKA,UAAU,iBACZ7B,EACE+E,QAAO,SAACC,EAAGzB,GAAJ,OAAUA,EAAI,IAAM,KAC3Bd,KAAI,SAACa,EAAMC,GAAP,OACH,kBAAC,EAAD,CAAMD,KAAMA,EAAMsB,KAAK,MAAMjC,IAAKY,QAGxC,yBAAK1B,UAAU,sBACf,yBAAKA,UAAU,kBACZ7B,EACE+E,QAAO,SAACC,EAAGzB,GAAJ,OAAUA,EAAI,IAAM,KAC3Bd,KAAI,SAACa,EAAMC,GAAP,OACH,kBAAC,EAAD,CAAMD,KAAMA,EAAMsB,KAAK,OAAOjC,IAAKY,U,8CClBhC0B,MCEA,YAA+B,IAATC,EAAQ,EAARA,KACnC,EAAiCrE,oBAAS,GAA1C,mBAAOsE,EAAP,KAAkBC,EAAlB,KAEQvC,EAAMvB,cAANuB,EAWR,OACE,yBAAKhB,UAAU,eAAeH,QAVhC,SAAkBC,GAChB,IAAM2B,EAAO3B,EAAMC,cACnB0B,EAAK+B,UAAUC,IAAI,uBACnBC,YAAW,WACTH,GAAaD,GACb7B,EAAK+B,UAAUG,OAAO,yBACrB,QAKCL,GACA,yBAAKtD,UAAU,cAAcC,IAAG,UAAKC,IAAL,kBAAqCmD,EAAKvG,MAAQsD,IAAI,KAEvFkD,GAAatC,EAAEqC,EAAKxE,QCrBZ+E,E,kDCIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,MAAQ,CACNC,aAAa,GALb,EAAKC,MAAQ,sBAAIpF,GAAJ,YAAeE,IAAY8B,KAAI,kBAAMqD,IAAMC,eACxD,EAAKtF,OAASqF,IAAMC,YAHH,E,qDAUnB,WAAqB,IAAD,OAelBC,SAASC,iBAAiB,UAdb,SAAPC,IACJ,GAAIC,OAAOC,YAAcD,OAAOE,YAAc,EAAK5F,OAAO6F,QAAQC,UAAY,IAAK,CACjF,IAAIhD,EAAI,EACFiD,EAAWC,aAAY,WAC3B,EAAKZ,MAAMtC,GAAG+C,QAAQjB,UAAUC,IAAI,qCACpC/B,IACU,EAAKsC,MAAMa,SACnB,EAAKC,SAAS,CAAEf,aAAa,IAC7BgB,cAAcJ,MAEf,KACHR,SAASa,oBAAoB,SAAUX,S,oBAM7C,WAAU,IAAD,OACP,OACE,oCACE,yBAAKrE,UAAU,SAASiF,IAAKC,KAAKtG,QAC/BA,EAAOgC,KAAI,SAACa,EAAMC,GAAP,OACV,yBAAK1B,UAAU,yBAAyBc,IAAKY,GAC3C,yBAAKuD,IAAK,EAAKjB,MAAMtC,GAAI1B,UAAU,+BACjC,kBAAC,EAAD,CAAYqD,KAAM5B,SAIxB,wBAAI0D,eAAcD,KAAKpB,MAAMC,YAAa/D,UAAW,oBACpDlB,EAAW8B,KAAI,SAACa,EAAMC,GAAP,OACd,yBAAK1B,UAAU,yBAAyBc,IAAKY,GAC3C,yBAAKuD,IAAK,EAAKjB,MAAMpF,EAAOiG,OAASnD,GAAI1B,UAAU,+BACjD,kBAAC,EAAD,CAAYqD,KAAM5B,e,GA5CEwC,IAAMmB,W,iBCqE3BC,MA/Df,WACE,IAAMC,EAAQC,YAAY,CACxBC,QAAS,CAAEC,QAAS,CAAEC,KAAM,YAC5BC,WAAY,CACVC,SAAU,GACVC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,eAAgB,OAIpB,EAAoBvG,cAAZuB,EAAR,EAAQA,EAAG1B,EAAX,EAAWA,KACX,OACE,kBAAC2G,EAAA,EAAD,CAAeX,MAAOA,GACpB,yBAAKtF,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,OAGF,kBAAC,EAAD,MAEA,yBAAKA,UAAU,kBAAkBgB,EAAE,eACnC,yBAAKhB,UAAW,uBACd,kBAAC,EAAD,CACE4B,MAAO,WACPY,SAAU,eACVC,KAAM,WACNC,KAAM,UACNlE,SAAUN,EAAYoB,EAAKa,YAE7B,kBAAC,EAAD,CACEyB,MAAM,cACNY,SAAS,kBACTC,KAAK,cACLC,KAAK,aACLlE,SAAUR,EAAesB,EAAKa,aAIlC,yBAAKH,UAAU,kBAAkBgB,EAAE,cACnC,kBAAC,EAAD,CAAcY,MAAM,WAAWY,SAAS,aAAaC,KAAK,mBAAcC,KAAK,aAE7E,yBAAK1C,UAAW,kBAAmBgB,EAAE,YACrC,kBAAC,EAAD,CACEY,MAAO,YACPY,SAAU,eACVC,KAAM,YACNC,KAAM,eAGR,yBAAK1C,UAAU,kBAAkBgB,EAAE,aACnC,kBAAC,EAAD,MAEA,yBAAKhB,UAAU,kBAAkBgB,EAAE,iBACnC,kBAAC,EAAD,UCvDUN,QACW,cAA7B4D,OAAO4B,SAASC,UAEe,UAA7B7B,OAAO4B,SAASC,UAEhB7B,OAAO4B,SAASC,SAASC,MACvB,2D,iCCbAC,GAAY,CAChBzJ,GAAI,CACF0J,Y,OAEFvJ,GAAI,CACFuJ,YAAavJ,KAIXwJ,GAAchH,aAAaiH,QAAQ,QACnCC,GAAUC,UAAUvG,SAASwG,MAAM,QAAQ,GAE3CC,GAAe,SAAAxH,GACnB,OAAO8B,OAAO2F,KAAKR,IAAWS,SAAS1H,GAAQA,OAAO2H,GAGxDzH,IAAK0H,IAAIC,KAAkBC,KAAK,CAC9Bb,aACAc,IAAG,oBAAEP,GAAaL,WAAf,QAA+BK,GAAaH,WAA5C,QAAwD,KAC3DW,aAAc,MAGD9H,EAAf,ECpBA+H,IAASC,OAAO,kBAAC,EAAD,MAASnD,SAASoD,eAAe,SF4H3C,kBAAmBb,WACrBA,UAAUc,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c64c1f67.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, Typography } from \"@material-ui/core\";\n\nexport const languages = [\"en\", \"ru\"];\n\nexport const langIcons = {\n  en: {\n    name: \"English\",\n    icon: \"uk\",\n  },\n  ru: {\n    name: \"Русский\",\n    icon: \"russia\",\n  },\n};\n\nfunction getAge() {\n  const today = new Date();\n  const birthDate = new Date(1999, 6, 1);\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const monthDiff = today.getMonth() - birthDate.getMonth();\n  if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age;\n}\n\nexport const about = {\n  age: getAge(),\n  // city: \"about.city_name\",\n  email: \"olyakrylo24@gmail.com\",\n  phone: \"+7(922)-216-26-25\",\n  cv: \"https://github.com/olyakrylo/CV_pdf/blob/master/Krylova_frontend_engineer.pdf\",\n};\n\nexport const contactIcons = [\n  {\n    modificator: \"vk\",\n    icon: \"vk\",\n    href: \"https://vk.com/olyakrylo\",\n  },\n  {\n    modificator: \"tg\",\n    icon: \"tg\",\n    href: \"https://t.me/olyakrylo\",\n  },\n  {\n    modificator: \"git\",\n    icon: \"github\",\n    href: \"https://github.com/olyakrylo\",\n  },\n  {\n    modificator: \"linkedin\",\n    icon: \"linkedin\",\n    href: \"https://www.linkedin.com/in/olga-krylova-3930871b6/\",\n  },\n];\n\nexport const biocadInfoList = {\n  ru: [\n    <Typography>\n      Разработка системы мониторинга лабораторного оборудования с использованием <b>Angular</b> на\n      клиентской части и <b>NestJS</b> в качестве Backend For Frontend <b>(BFF)</b>,\n      автоматизирующей процессы мониторинга оборудования и работы с ним. Система состоит из модулей\n      для работы с оборудованием, отчетами, дашбордами и различными графиками.\n      <br />\n      <b>Стек:</b> Angular 11, RxJs, NestJS, ECharts, Material UI, svg.\n    </Typography>,\n    <Typography>\n      Реализация взаимодействия между фронтендом и бэкендом с использованием <b>REST</b> и{\" \"}\n      <b>WebSockets</b>.\n      <br />\n      <b>Стек:</b> fetch API, Centrifugo.\n    </Typography>,\n    <Typography>\n      Разработка части модуля для аутентификации и авторизации пользователей через{\" \"}\n      <b>Microsoft Azure</b> и <b>KeyCloak</b>.\n      <br />\n      <b>Стек:</b> openid-client.\n    </Typography>,\n    <Typography>\n      Участие в построении <b>CI/CD</b> пайплайна, который помогает тестировать приложение на каждой\n      стадии.\n      <br />\n      <b>Стек:</b> Docker, Kubernetes, GitLab\n    </Typography>,\n  ],\n  en: [\n    <Typography>\n      Developed a system for laboratory equipment monitoring using <b>Angular</b> for client side\n      and <b>NestJS</b> server as Backend For Frontend <b>(BFF)</b>, which <b>automated</b> the\n      process of equipment booking and monitoring. The system consisted of modules for working with\n      laboratory equipment, reports, dashboards and various charts.\n      <br />\n      <b>Stack:</b> Angular 11, RxJs, NestJS, ECharts, Material UI, svg.\n    </Typography>,\n    <Typography>\n      Implemented communication between frontend and backend using <b>REST</b> and <b>WebSockets</b>\n      .<br />\n      <b>Stack:</b> fetch API, Centrifugo.\n    </Typography>,\n    <Typography>\n      Developed a part of the module for authentication and authorisation using{\" \"}\n      <b>Microsoft Azure</b> and <b>KeyCloak</b>.<br />\n      <b>Stack:</b> openid-client.\n    </Typography>,\n    <Typography>\n      Participated in building <b>CI/CD</b> pipeline which helps to test the application at each\n      stage.\n      <br />\n      <b>Stack:</b> Docker, Kubernetes, GitLab.\n    </Typography>,\n  ],\n};\n\nexport const gpnInfoList = {\n  ru: [\n    <Typography>\n      Разрабатывала систему навигации для морских судов, которая <b>помогала</b> морским капитанам\n      отслеживать положения и маршруты судов, следить за погодными условиями, ледовой обстановкой и\n      другими факторами риска.\n      <br />\n      <b>Cтек:</b> Angular 11, RxJs, Leaflet.\n    </Typography>,\n    <Typography>\n      Система также обеспечивала <b>взаимодействие</b> с картой для различных отметок и возможностью\n      ими <b>делиться</b>.\n    </Typography>,\n  ],\n  en: [\n    <Typography>\n      Developed a navigation system for sea vessels using <b>Angular</b> and <b>Leaflet</b>, which{\" \"}\n      <b>helped</b> sea captains to track the positions and routes of ships, monitor weather or ice\n      conditions and other risk factors.\n      <br />\n      <b>Stack:</b> Angular 11, RxJs, Leaflet.\n    </Typography>,\n    <Typography>\n      The system also provided <b>interaction</b> with the map for various marks and the ability to{\" \"}\n      <b>share</b> them.\n    </Typography>,\n  ],\n};\n\nexport const projects = [\n  {\n    intlName: \"mc\",\n    // linkTitle: \"Vercel\",\n    link: \"https://memory-cards-v2.vercel.app/app\",\n    techs: [\"Next.js\", \"TypeScript\", \"Redux\", \"mui\", \"MongoDB\", \"Redis\"],\n    gitHubLink: \"https://github.com/olyakrylo/memory-cards-v2\",\n    infoList: {\n      ru: [\n        <Typography>\n          Приложение для создания публичных или приватных тем с карточками для запоминания с простой\n          авторизацией и панелью администратора.\n        </Typography>,\n        <Typography>\n          Для работы с базой без использования удаленного сервера используется{\" \"}\n          <Link href=\"https://mongoosejs.com/\" target=\"_blank\">\n            mongoose\n          </Link>\n          . Также ипользуется{\" \"}\n          <Link href=\"https://redis.io/\" target=\"_blank\">\n            Redis\n          </Link>{\" \"}\n          для хранения изображений.\n        </Typography>,\n        <Typography>\n          Пользовательские хуки используются в качестве сервисов для обращения к API и для\n          взаимодействия с состоянием приложения.\n        </Typography>,\n      ],\n      en: [\n        <Typography>\n          An application for creating private or public topics with memory cards with simple\n          authorisation and admin panel.\n        </Typography>,\n        <Typography>\n          <Link href=\"https://mongoosejs.com/\" target=\"_blank\">\n            Mongoose\n          </Link>{\" \"}\n          is used for database fetching without any remote server and Redis is used to store images.\n        </Typography>,\n        <Typography>\n          Custom hooks are used as services for api fetching and interaction with redux state.\n        </Typography>,\n      ],\n    },\n  },\n  {\n    intlName: \"mts\",\n    linkTitle: \"Pages\",\n    link: \"https://olyakrylo.github.io/multi-tenant-shop/#/\",\n    techs: [\"React\", \"TypeScript\", \"Django\"],\n    gitHubLink: \"https://github.com/olyakrylo/multi-tenant-shop\",\n    infoList: {\n      ru: [\n        <Typography>\n          На бэкенде используется{\" \"}\n          <Link\n            target=\"_blank\"\n            href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/saas-tenancy-app-design-patterns\"\n          >\n            multi-tenant паттерн\n          </Link>\n          , чтобы использовать единую базу для всех клиентов.\n        </Typography>,\n        <Typography>\n          Единый фронтенд для всех клиентов, данные зависят от переданного токена.\n        </Typography>,\n        <Typography>\n          Пользователи с ролью администратора могут использовать панель администратора для\n          управления данными.\n        </Typography>,\n      ],\n      en: [\n        <Typography>\n          Backend uses a simple{\" \"}\n          <Link\n            target=\"_blank\"\n            href=\"https://docs.microsoft.com/en-us/azure/azure-sql/database/saas-tenancy-app-design-patterns\"\n          >\n            multi-tenant pattern\n          </Link>{\" \"}\n          for using a single database to host data for all tenants.\n        </Typography>,\n        <Typography>\n          Frontend is the same for all tenants and its data depends on tenant token.\n        </Typography>,\n        <Typography>\n          Users with admin rights can see an admin panel for manipulating data.\n        </Typography>,\n      ],\n    },\n  },\n  // {\n  //   intlName: \"pb\",\n  //   linkTitle: \"Heroku\",\n  //   link: \"https://amcp-pb.herokuapp.com/\",\n  //   techs: [\"ReactJS\", \"Django\", \"Heroku\"],\n  // },\n  {\n    intlName: \"ecs\",\n    techs: [\"React-Native\", \"Expo SDK\"],\n    gitHubLink: \"https://github.com/LazyDareDevil/employment-control-system/tree/Frontend\",\n    infoList: {\n      ru: [\n        <Typography>\n          Система управления рабочими местами в помещении с использованием метки-токена на смартфоне\n          и определением ее местоположения в помещении, оборудованном системой внутренней навигации.\n        </Typography>,\n        <Typography>\n          Система может распознать метку, получить информацию о токене, валидировать его в системе\n          управления помещением, показать сотруднику рабочий стол на плане помещения в мобильном\n          приложении, в соответствии с его токеном, и включить оборудование на рабочем столе.\n        </Typography>,\n        <Typography>\n          Через подтверждение сотрудником на мобильном приложении, система вычисляет суммарное время\n          нахождения сотрудника на рабочем месте и передает эту информацию в мобильное приложение\n          для оплаты.\n        </Typography>,\n      ],\n      en: [\n        <Typography>\n          An employment control system using a token on a smartphone and determining its location in\n          a room equipped with an internal navigation system.\n        </Typography>,\n        <Typography>\n          The system can get information about the token, validate it in the room management system,\n          show the employee the workplace on the room plan in the mobile application and turn on the\n          equipment on the workplace.\n        </Typography>,\n        <Typography>\n          After the employee's confirmation in the mobile application, the system calculates total\n          time spent at the workplace and transmits this information to the mobile application for\n          payment.\n        </Typography>,\n      ],\n    },\n  },\n];\n\nexport const skills = [\n  {\n    icon: \"js.svg\",\n    text: \"JavaScript\",\n  },\n  {\n    icon: \"ts.svg\",\n    text: \"TypeScript\",\n  },\n  {\n    icon: \"react.svg\",\n    text: \"React & React-Native\",\n  },\n  {\n    icon: \"angular.svg\",\n    text: \"Angular\",\n  },\n  {\n    icon: \"rxjs.svg\",\n    text: \"RxJS\",\n  },\n  {\n    icon: \"next-js.svg\",\n    text: \"Next.js\",\n  },\n  {\n    icon: \"nest-ts.svg\",\n    text: \"NestJS\",\n  },\n  {\n    icon: \"leaflet.svg\",\n    text: \"Leaflet\",\n  },\n  {\n    icon: \"mongo.svg\",\n    text: \"MongoDB\",\n  },\n  // {\n  //   icon: \"html.svg\",\n  //   text: \"HTML 5\",\n  // },\n  // {\n  //   icon: \"css.svg\",\n  //   text: \"CSS 3\",\n  // },\n  {\n    icon: \"sass.svg\",\n    text: \"SASS & LESS\",\n  },\n  {\n    icon: \"git.svg\",\n    text: \"Git\",\n  },\n  {\n    icon: \"python.svg\",\n    text: \"Python\",\n  },\n  {\n    icon: \"django.svg\",\n    text: \"Django\",\n  },\n  {\n    icon: \"expo.svg\",\n    text: \"Expo SDK\",\n  },\n  {\n    icon: \"figma.svg\",\n    text: \"Figma\",\n  },\n  {\n    icon: \"heroku.svg\",\n    text: \"Heroku\",\n  },\n];\n\nexport const softSkills = [\n  {\n    icon: \"communication.svg\",\n    text: \"skills.communication\",\n  },\n  {\n    icon: \"collaboration.svg\",\n    text: \"skills.teamwork\",\n  },\n  {\n    icon: \"sync-problem.svg\",\n    text: \"skills.problem_solving\",\n  },\n  {\n    icon: \"details.svg\",\n    text: \"skills.attention_to_detail\",\n  },\n];\n","import LocalesMenu from \"./LocalesMenu\";\n\nexport default LocalesMenu;\n","import React, { useState } from \"react\";\nimport \"./LocalesMenu.css\";\nimport { Button, Menu, MenuItem } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { languages, langIcons } from \"../../info\";\n\nexport default function LocalesMenu() {\n  let [langMenu, setLangMenu] = useState(null);\n\n  const openMenu = event => {\n    setLangMenu(event.currentTarget);\n  };\n\n  const closeMenu = () => {\n    setLangMenu(null);\n  };\n\n  const changeLanguage = async lang => {\n    await i18n.changeLanguage(lang);\n    localStorage.setItem(\"lang\", lang);\n  };\n\n  const { i18n } = useTranslation();\n\n  return (\n    <div>\n      <Button\n        aria-owns=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={openMenu}\n        className=\"header__lang-button\"\n      >\n        <img\n          className=\"language__img\"\n          src={`${process.env.PUBLIC_URL}/icons/${langIcons[i18n.language].icon}.svg`}\n          alt=\"\"\n        />\n      </Button>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={langMenu}\n        keepMounted\n        open={Boolean(langMenu)}\n        onClose={closeMenu}\n      >\n        {languages.map(lang => (\n          <MenuItem key={lang} onClick={() => changeLanguage(lang)}>\n            <img\n              className=\"language__img\"\n              src={`${process.env.PUBLIC_URL}/icons/${langIcons[lang].icon}.svg`}\n              alt=\"\"\n            />\n            <span className=\"language__title\">{langIcons[lang].name}</span>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n}\n","import About from \"./About\";\n\nexport default About;\n","import React from \"react\";\nimport \"./About.css\";\nimport { Divider, Link, Tooltip } from \"@material-ui/core\";\nimport { useTranslation } from \"react-i18next\";\nimport { about, contactIcons } from \"../../info\";\n\nexport default function About() {\n  const { t } = useTranslation();\n\n  function getDetails() {\n    return Object.entries(about).reduce((prev, [field, value]) => {\n      let content = <div key={value}>{t(value)}</div>;\n      if (field === \"cv\") {\n        content = (\n          <Link key={value} href={value} target=\"_blank\">\n            View on GitHub\n          </Link>\n        );\n      }\n      return [\n        ...prev,\n        <div className=\"info__details_bold\" key={field}>\n          {t(`about.${field}`)}\n        </div>,\n        content,\n      ];\n    }, []);\n  }\n\n  function getContacts() {\n    return contactIcons.map((item, i) => (\n      <Tooltip title={item.href} key={i}>\n        <a\n          href={item.href}\n          className={`info__link info__link_${item.modificator}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img\n            src={`${process.env.PUBLIC_URL}/icons/${item.icon}.svg`}\n            alt=\"\"\n            className=\"info__link-img\"\n          />\n        </a>\n      </Tooltip>\n    ));\n  }\n\n  return (\n    <div className=\"about\">\n      <img src={`${process.env.PUBLIC_URL}/img/me.png`} className=\"about__img\" alt=\"\" />\n      <div className=\"about__info info\">\n        <div className=\"info__name\">\n          <span className=\"info__name_bold\">{t(\"name\")}</span>\n        </div>\n        <div className=\"info__position\">{t(\"position\")}</div>\n        <Divider className=\"info__divider\" />\n        <div className=\"info__details\">{getDetails()}</div>\n        <div className=\"info__links\">{getContacts()}</div>\n      </div>\n    </div>\n  );\n}\n","import AppDialog from \"./Dialog\";\n\nexport default AppDialog;\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  List,\n  ListItem,\n} from \"@material-ui/core\";\nimport \"./Dialog.css\";\n\nexport default function AppDialog({ opened, title, content, onClose, infoList = [] }) {\n  return (\n    <Dialog open={opened} onClose={onClose}>\n      <DialogTitle className=\"title\">{title}</DialogTitle>\n      <DialogContent>\n        <List className=\"list\">\n          {infoList.map((data, i) => (\n            <ListItem key={i} className=\"list__item\">\n              {data}\n            </ListItem>\n          ))}\n        </List>\n      </DialogContent>\n      <DialogActions />\n    </Dialog>\n  );\n}\n","import Organization from \"./Organization\";\n\nexport default Organization;\n","import React, { useState } from \"react\";\nimport \"./Organization.css\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button } from \"@material-ui/core\";\nimport AppDialog from \"../Dialog\";\n\nexport default function Organization({ title, subtitle, year, logo, infoList }) {\n  const [dialogOpened, setDialogOpened] = useState(false);\n\n  function openDialog() {\n    setDialogOpened(true);\n  }\n\n  function closeDialog() {\n    setDialogOpened(false);\n  }\n\n  const { t } = useTranslation();\n  return (\n    <div className=\"org\">\n      <div className=\"org__info\">\n        <div className=\"org__title\">{t(title)}</div>\n        <div className=\"org__subtitle\">{t(subtitle)}</div>\n\n        {infoList && (\n          <Button className=\"org__more\" variant={\"outlined\"} onClick={openDialog}>\n            {t(\"read_more\")}\n          </Button>\n        )}\n\n        <div className=\"org__year\">{t(year)}</div>\n      </div>\n      <img className=\"org__img\" src={`${process.env.PUBLIC_URL}/img/${logo}`} alt=\"\" />\n\n      {infoList && (\n        <AppDialog\n          opened={dialogOpened}\n          infoList={infoList}\n          title={t(\"project_description\")}\n          onClose={closeDialog}\n        />\n      )}\n    </div>\n  );\n}\n","import Item from \"./Item\";\n\nexport default Item;\n","import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./Item.css\";\nimport AppDialog from \"../../Dialog\";\nimport { Link } from \"@material-ui/core\";\n\nexport default function Item({ item, type }) {\n  const [dialogOpened, setDialogOpened] = useState(false);\n\n  function openDialog() {\n    setDialogOpened(true);\n  }\n\n  function closeDialog() {\n    setDialogOpened(false);\n  }\n\n  const { t, i18n } = useTranslation();\n  return (\n    <div className={`item item_${type}`}>\n      <div className=\"item__info\">\n        <div className=\"item__title\">\n          {t(`${item.intlName}.title`)}\n          {item.gitHubLink && (\n            <Link target=\"_blank\" href={item.gitHubLink} className=\"item__gh-link\">\n              <img\n                alt=\"github\"\n                src={`${process.env.PUBLIC_URL}/icons/github.svg`}\n                className=\"item__gh-image\"\n              />\n            </Link>\n          )}\n        </div>\n        <div className=\"item__subtitle\">{t(`${item.intlName}.subtitle`)}</div>\n        {item.link && (\n          <a className=\"item__link\" href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {t(item.linkTitle ? \"open_with\" : \"open\")}\n            {item.linkTitle && <>&nbsp;{item.linkTitle}</>}\n          </a>\n        )}\n        <div className=\"item__bottom\">\n          <button className=\"item__more\" onClick={openDialog}>\n            {t(\"read_more\")}\n          </button>\n          <div className=\"item__techs\">\n            {item.techs.map((tech, i) => (\n              <div className=\"item__tech\" key={i}>\n                {tech}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <AppDialog\n        opened={dialogOpened}\n        title={t(\"project_description\")}\n        infoList={item.infoList[i18n.language] ?? []}\n        onClose={closeDialog}\n      />\n    </div>\n  );\n}\n","import Projects from \"./Projects\";\n\nexport default Projects;\n","import React from \"react\";\nimport \"./Projects.css\";\nimport Item from \"./Item\";\nimport { projects } from \"../../info\";\n\nexport default function Projects() {\n  return (\n    <div className=\"projects\">\n      <div className=\"projects__odd\">\n        {projects\n          .filter((_, i) => i % 2 === 0)\n          .map((item, i) => (\n            <Item item={item} type=\"odd\" key={i} />\n          ))}\n      </div>\n      <div className=\"projects__divider\"></div>\n      <div className=\"projects__even\">\n        {projects\n          .filter((_, i) => i % 2 !== 0)\n          .map((item, i) => (\n            <Item item={item} type=\"even\" key={i} />\n          ))}\n      </div>\n    </div>\n  );\n}\n","import SkillsItem from \"./Item\";\n\nexport default SkillsItem;\n","import React, { useState } from \"react\";\nimport \"./Item.css\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function SkillsItem({ info }) {\n  const [showTitle, toggleTitle] = useState(false);\n\n  const { t } = useTranslation();\n\n  function turnOver(event) {\n    const item = event.currentTarget;\n    item.classList.add(\"skills__item_hidden\");\n    setTimeout(() => {\n      toggleTitle(!showTitle);\n      item.classList.remove(\"skills__item_hidden\");\n    }, 200);\n  }\n\n  return (\n    <div className=\"skills__item\" onClick={turnOver}>\n      {!showTitle && (\n        <img className=\"skills__img\" src={`${process.env.PUBLIC_URL}/icons/${info.icon}`} alt=\"\" />\n      )}\n      {showTitle && t(info.text)}\n    </div>\n  );\n}\n","import Skills from \"./Skills\";\n\nexport default Skills;\n","import React from \"react\";\nimport \"./Skills.css\";\nimport { skills, softSkills } from \"../../info\";\nimport SkillsItem from \"./Item\";\n\nexport default class Skills extends React.Component {\n  constructor(props) {\n    super(props);\n    this.items = [...skills, ...softSkills].map(() => React.createRef());\n    this.skills = React.createRef();\n  }\n\n  state = {\n    showDivider: false,\n  };\n\n  componentDidMount() {\n    const show = () => {\n      if (window.pageYOffset + window.innerHeight - this.skills.current.offsetTop > 100) {\n        let i = 0;\n        const interval = setInterval(() => {\n          this.items[i].current.classList.add(\"skills__animation-container_end\");\n          i++;\n          if (i === this.items.length) {\n            this.setState({ showDivider: true });\n            clearInterval(interval);\n          }\n        }, 100);\n        document.removeEventListener(\"scroll\", show);\n      }\n    };\n    document.addEventListener(\"scroll\", show);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"skills\" ref={this.skills}>\n          {skills.map((item, i) => (\n            <div className=\"skills__item-container\" key={i}>\n              <div ref={this.items[i]} className=\"skills__animation-container\">\n                <SkillsItem info={item} />\n              </div>\n            </div>\n          ))}\n          <hr aria-hidden={!this.state.showDivider} className={\"skills__divider\"} />\n          {softSkills.map((item, i) => (\n            <div className=\"skills__item-container\" key={i}>\n              <div ref={this.items[skills.length + i]} className=\"skills__animation-container\">\n                <SkillsItem info={item} />\n              </div>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { useTranslation } from \"react-i18next\";\nimport LocalesMenu from \"./components/LocalesMenu\";\nimport About from \"./components/About\";\nimport Organization from \"./components/Organization\";\nimport Projects from \"./components/Projects\";\nimport Skills from \"./components/Skills\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { biocadInfoList, gpnInfoList } from \"./info\";\n\nfunction App() {\n  const theme = createTheme({\n    palette: { primary: { main: \"#1a8f88\" } },\n    typography: {\n      fontSize: 14,\n      fontWeightLight: 300,\n      fontWeightMedium: 400,\n      fontWeightRegular: 400,\n      fontWeightBold: 500,\n    },\n  });\n\n  const { t, i18n } = useTranslation();\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"container\">\n        <div className=\"content\">\n          <div className=\"header\">\n            <LocalesMenu />\n          </div>\n\n          <About />\n\n          <div className=\"content__title\">{t(\"experience\")}</div>\n          <div className={\"content__experience\"}>\n            <Organization\n              title={\"gpn.name\"}\n              subtitle={\"gpn.position\"}\n              year={\"gpn.year\"}\n              logo={\"gpn.png\"}\n              infoList={gpnInfoList[i18n.language]}\n            />\n            <Organization\n              title=\"BIOCAD.name\"\n              subtitle=\"BIOCAD.position\"\n              year=\"BIOCAD.year\"\n              logo=\"biocad.png\"\n              infoList={biocadInfoList[i18n.language]}\n            />\n          </div>\n\n          <div className=\"content__title\">{t(\"education\")}</div>\n          <Organization title=\"uni.name\" subtitle=\"uni.status\" year=\"2017 — 2021\" logo=\"spbu.png\" />\n\n          <div className={\"content__title\"}>{t(\"courses\")}</div>\n          <Organization\n            title={\"shri.name\"}\n            subtitle={\"shri.company\"}\n            year={\"shri.year\"}\n            logo={\"yandex.png\"}\n          />\n\n          <div className=\"content__title\">{t(\"projects\")}</div>\n          <Projects />\n\n          <div className=\"content__title\">{t(\"skills.title\")}</div>\n          <Skills />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport ru from \"./locales/ru.json\";\nimport en from \"./locales/en.json\";\n\nconst resources = {\n  en: {\n    translation: en,\n  },\n  ru: {\n    translation: ru,\n  },\n};\n\nconst storageLang = localStorage.getItem(\"lang\");\nconst navLang = navigator.language.split(/[-_]/)[0];\n\nconst getLangValue = lang => {\n  return Object.keys(resources).includes(lang) ? lang : undefined;\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: getLangValue(storageLang) ?? getLangValue(navLang) ?? \"en\",\n  keySeparator: \".\",\n});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./i18n\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}